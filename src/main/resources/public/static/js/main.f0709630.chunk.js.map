{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamLink","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","console","log","fetchMatches","totalWins","totalLosses","totalMatches","title","value","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0709630.chunk.js","sourcesContent":["import { React } from 'react';\nimport { Link } from 'react-router-dom'\nimport './MatchDetailCard.scss';\n\nexport const MatchDetailCard = ({teamName, match}) => {\n  if (!match) return null;\n\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n  const otherTeamLink = `/teams/${otherTeam}`;\n  const isMatchWon = teamName === match.matchWinner;\n  return ( \n      <div className= {isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\n        <div>\n          <span className=\"vs\">vs</span>\n          <h1><Link to={otherTeamLink}>{otherTeam}</Link></h1>\n          <h2 className=\"match-date\">{match.date}</h2>\n          <h3 className=\"match-venue\">at {match.venue}</h3>\n          <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\n        </div>\n        <div className=\"additional-detail\">\n          <h3>First Innings</h3>\n          <p>{match.team1}</p>\n          <h3>Second Innings</h3>\n          <p>{match.team2}</p>\n          <h3>Man Of the macth</h3>\n          <p>{match.playerOfMatch}</p>\n          <h3>Umpires</h3>\n          <p>{match.umpire1}, {match.umpire2}</p>\n        </div>\n      </div>\n\n  );\n}\n\n\n","import { React } from 'react';\nimport { Link } from 'react-router-dom'\nimport './MatchSmallCard.scss';\n\nexport const MatchSmallCard = ({teamName, match}) => {\n  if (!match) return null;\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n  const otherTeamLink = `/teams/${otherTeam}`;\n  const isMatchWon = teamName === match.matchWinner;\n  return (\n    <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\n      <span className=\"vs\">vs</span>\n      <h2><Link to={otherTeamLink}>{otherTeam}</Link></h2>\n      <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\n    </div>\n  );\n}","import { React, useEffect, useState } from 'react';\nimport {useParams} from 'react-router-dom'\nimport { MatchDetailCard } from '../components/MatchDetailCard';\nimport { MatchSmallCard } from '../components/MatchSmallCard';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { Link } from 'react-router-dom'\nimport './TeamPage.scss';\n\nexport const TeamPage = () => {\n\n  const [team, setTeam] = useState({matches : []});\n  const { teamName } = useParams();\n\n\n  useEffect(\n    () => {\n      const fetchMatches = async () => {\n          const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/teams/${teamName}`);\n          const data = await response.json();\n          setTeam(data);\n          console.log(data);\n      };\n\n      fetchMatches();\n    }, [teamName]\n  );\n\n  if (!team || !team.teamName) {\n    return <h1>Team not found</h1>\n  }\n\n  const totalWins = team.totalWins;\n  const totalLosses = team.totalMatches - team.totalWins;\n\n  return (\n    <div className=\"TeamPage\">\n      <div className=\"team-name-section\">\n        <h1 className=\"team-name\">{team.teamName}</h1>\n      </div>\n      <div className=\"win-loss-section\">Wins {totalWins}/Losses {totalLosses}\n        <PieChart \n          data={[\n            { title: 'Wins', value: totalWins, color: '#57ac63'},\n            { title: 'Losses', value: totalLosses, color: '#9c3f50' },\n          ]}\n        />\n      </div>\n      \n      <div className=\"match-detail-section\">\n        <h3>Latest Matches</h3>\n        <MatchDetailCard teamName = {team.teamName} match = {team.matches[0]}/>\n      </div>\n      {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName = {team.teamName}  match = {match}/>)} \n      <div className=\"more-link\">\n        <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>\n          <span>More</span>\n        </Link>\n      </div>  \n\n    </div>\n  );\n}\n\n\n","import { React } from 'react';\nimport { Link } from 'react-router-dom'\nimport './YearSelector.scss';\n\nexport const YearSelector = ({teamName}) => {\n\n  let years = []\n  const startYear = process.env.REACT_APP_DATA_START_YEAR;\n  const endYear = process.env.REACT_APP_DATA_END_YEAR;\n  for (let i=startYear; i<=endYear; i++) {\n    years.push(i)\n  }\n\n  return ( \n    <ol className=\"YearSelector\">\n      {years.map(year => (\n      <li key={year}>\n        <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\n      </li>)\n        )}\n    </ol>\n  );\n}","import { React, useEffect, useState } from 'react';\nimport {useParams} from 'react-router-dom'\nimport { MatchDetailCard } from '../components/MatchDetailCard';\nimport { YearSelector } from '../components/YearSelector';\nimport './MatchPage.scss'\n\nexport const MatchPage = () => {\n\n  const[matches, setMatches] = useState([]);\n  // const teamName = \"Delhi Capitals\"\n  const { teamName, year } = useParams();\n\n  useEffect(\n    () => {\n      const fetchMatches = async () => {\n          const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/teams/${teamName}/matches?year=${year}`);\n          const data = await response.json();\n          setMatches(data);\n          console.log(data);\n      };\n\n      fetchMatches();\n    }, [teamName, year]\n  );\n\n\n  return (\n    <div className=\"MatchPage\">\n\n\n        <div className=\"year-selector\">\n          <h3>Select Year</h3>\n          <YearSelector teamName={teamName}/>\n        </div>\n        <div>\n        <h1>{teamName}'s {year} Matches </h1>\n          {matches.map(match => <MatchDetailCard key={match.id} teamName = {teamName}  match = {match}/>)} \n        </div>\n    </div>\n  );\n}\n\n\n","import React from 'react'\nimport './TeamTile.scss';\n\nexport const TeamTile = ({teamName}) => {\n  return (\n    <div className=\"TeamTile\">\n      <h2>{teamName}</h2>\n    </div>\n  )\n}\n","import { React, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport './HomePage.scss';\nimport { TeamTile } from '../components/TeamTile';\n\nexport const HomePage = () => {\n\n  const [teams, setTeams] = useState([]);\n\n  useEffect(\n    () => {\n      const fetchAllTeams = async () => {\n          const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/teams`);\n          const data = await response.json();\n          setTeams(data);\n          console.log(data);\n      };\n\n      fetchAllTeams();\n    }, []\n  );\n\n\n  return (\n    <div className=\"HomePage\">\n      <div className=\"header-section\">\n        <h1 className=\"app-name\">IPL Dashboard</h1>\n      </div>\n      <div className=\"team-grid\">\n        {teams.map(team => <Link key={team.id} to={`/teams/${team.teamName}`}><TeamTile key={team.id} teamName={team.teamName}></TeamTile></Link>)}\n      </div>\n\n\n    </div>\n  );\n}\n\n\n","import './App.scss';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path= \"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}